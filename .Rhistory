gc()
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
snp_positions <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/snp_position.txt")
dim(fang_et_al_genotypes) #number of rows x number of columns
dim(snp_positions)
nrow(fang_et_al_genotypes) #number of rows
nrow(snp_positions)
ncol(fang_et_al_genotypes) #number of columns
ncol(snp_positions)
str(fang_et_al_genotypes) #type of object, number of observations and variables, name of variables, variable type, data preview
str(snp_positions)
gc()
maize_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMMIL" | `Group` == "ZMMLR" | `Group` == "ZMMMR") #isolates maize groups from `fang_et_al_genotypes`
teosinte_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMPBA" | `Group` == "ZMPIL" | `Group` == "ZMPJA")
transposed_maize_genotypes <- as.data.frame(t(maize_genotypes[,-c(1,2,3)])) #transposes all but the first 3 columns
colnames(transposed_maize_genotypes) <- maize_genotypes$Sample_ID #restores column names as Sample_ID from maize genotype data
transposed_teosinte_genotypes <- as.data.frame(t(teosinte_genotypes[,-c(1,2,3)])) #transposes all but the first 3 columns
colnames(transposed_teosinte_genotypes) <- teosinte_genotypes$Sample_ID #restores column names as Sample_ID from teosinte genotype data
reduced_snp_positions <- snp_positions[ ,c("SNP_ID","Chromosome","Position")]
gc()
merged_snp_geno_maize <- merge(reduced_snp_positions, transposed_maize_genotypes)
gc()
View(merged_snp_geno_maize)
rm(merged_snp_geno_maize)
gc()
gc()
View(maize_genotypes)
View(transposed_maize_genotypes)
View(fang_et_al_genotypes)
colnames(transposed_maize_genotypes)[0] <- "SNP_ID"
transposed_maize_genotypes <- as.data.frame(t(as.matrix(maize_genotypes[,-c(1,2,3)]))) #transposes all but the first 3 columns
transposed_maize_genotypes <- as.data.frame(t(as.matrix(maize_genotypes[-c(1),-c(1,2,3)]))) #transposes all but the first 3 columns
View(transposed_maize_genotypes)
maize_genotypes[-c(1),-c(1,2,3)]
as.matrix(maize_genotypes[-c(1),-c(1,2,3)])
transposed_maize_genotypes <- as.data.frame(t(as.matrix(maize_genotypes)[-c(1),-c(1,2,3)])) #transposes all but the first 3 columns
as.matrix(maize_genotypes)[-c(1),-c(1,2,3)]
as.matrix(maize_genotypes)[-1,-c(1,2,3)]
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
View(fang_et_al_genotypes)
help("read_tsv")
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", col_names = FALSE)
View(snp_positions)
dim(fang_et_al_genotypes) #number of rows x number of columns
dim(snp_positions)
nrow(fang_et_al_genotypes) #number of rows
maize_genotypes <- filter(fang_et_al_genotypes, `X3` == "ZMMIL" | `X3` == "ZMMLR" | `X3` == "ZMMMR") #isolates maize groups from `fang_et_al_genotypes`
View(maize_genotypes)
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
maize_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMMIL" | `Group` == "ZMMLR" | `Group` == "ZMMMR") #isolates maize groups from `fang_et_al_genotypes`
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", stringsAsFactors = FALSE)
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
maize_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMMIL" | `Group` == "ZMMLR" | `Group` == "ZMMMR") #isolates maize groups from `fang_et_al_genotypes`
teosinte_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMPBA" | `Group` == "ZMPIL" | `Group` == "ZMPJA")
transposed_maize_genotypes <- as.data.frame(t(as.matrix(maize_genotypes)[,-c(1,2,3)])) #transposes all but the first 3 columns
colnames(transposed_maize_genotypes) <- maize_genotypes$Sample_ID #restores column names as Sample_ID from maize genotype data
transposed_maize_genotypes$SNP_ID <- rownames(transposed_maize_genotypes)
rownames(transposed_maize_genotypes) <- NULL
transposed_teosinte_genotypes <- as.data.frame(t(teosinte_genotypes[,-c(1,2,3)])) #transposes all but the first 3 columns
colnames(transposed_teosinte_genotypes) <- teosinte_genotypes$Sample_ID #restores column names as Sample_ID from teosinte genotype data
transposed_teosinte_genotypes$SNP_ID <- rownames(transposed_teosinte_genotypes)
rownames(transposed_teosinte_genotypes) <- NULL
reduced_snp_positions <- snp_positions[ ,c("SNP_ID","Chromosome","Position")]
help("merge")
View(reduced_snp_positions)
merged_snp_geno_maize <- merge(reduced_snp_positions, transposed_maize_genotypes)
View(merged_snp_geno_maize)
merged_snp_geno_teosinte <- merge(reduced_snp_positions, transposed_teosinte_genotypes)
help("arrange")
merged_snp_geno_maize_QM <- merged_snp_geno_maize[merged_snp_geno_maize == "?/?"] <- "?"
merged_snp_geno_maize_QM <- (merged_snp_geno_maize[merged_snp_geno_maize == "?/?"] <- "?")
merged_snp_geno_maize_QM <- mutate_all(merged_snp_geno_maize, replace(., . == "?/?", "?"))
merged_snp_geno_maize_QM <- mutate_all(merged_snp_geno_maize, replace(., which(. == "?/?"), "?"))
help("mutate_all")
help("replace")
merged_snp_geno_maize_QM <- merged_snp_geno_maize %>% mutate_all(., replace(., which(. == "?/?"), "?"))
merged_snp_geno_maize_QM <- (merged_snp_geno_maize %>% mutate_all(., replace(., which(. == "?/?"), "?")))
help(gsub)
merged_snp_geno_maize_QM <- mutate_all(merged_snp_geno_maize, gsub("?/?", "?"))
merged_snp_geno_maize_QM <- mutate_all(merged_snp_geno_maize, gsub("?/?", "?", .))
help("apply")
merged_snp_geno_maize_QM <- apply(merged_snp_geno_maize, c(1, 2), gsub("?/?", "?"))
merged_snp_geno_maize_QM <- apply(merged_snp_geno_maize, c(1, 2), gsub("?/?", "?", merged_snp_geno_maize))
merged_snp_geno_maize_QM <- mutate_all(merged_snp_geno_maize, gsub("?/?", "?", merged_snp_geno_maize))
help("mutate_all")
help(apply(array, margin, ...))
help("apply")
apply(merged_snp_geno_maize, c(1, 2), gsub, "?/?", "?", fixed = TRUE)
merged_snp_geno_maize-QM <- apply(merged_snp_geno_maize, c(1, 2), gsub, "?/?", "?", fixed = TRUE)
merged_snp_geno_maize_QM <- apply(merged_snp_geno_maize, c(1, 2), gsub, "?/?", "?", fixed = TRUE)
View(merged_snp_geno_maize_QM)
merged_snp_geno_maize_QM <- apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)})
View(merged_snp_geno_maize_QM)
help("data.frame")
merged_snp_geno_maize_QM <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)}))
View(merged_snp_geno_maize_QM)
merged_snp_geno_maize_QM <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize`
merged_snp_geno_maize_D <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize` to substitute every instance of "?/?" with "-"
View(merged_snp_geno_maize_D)
merged_snp_geno_teosinte_QM <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "?"
merged_snp_geno_teosinte_D <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "-"
View(merged_snp_geno_teosinte_D)
View(merged_snp_geno_teosinte_QM)
help("filter")
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
}
}
for (i in c(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM))
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
}
}
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
}
}
rm(i)
rm(j)
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
}
}
rm(j)
for (i in c(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM))
paste(deparse(substitute(i)), "chr"as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
for (i in c(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM))
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- data.frame(apply(i, 2, function(x){x <- filter(x, i$Chromosome == j)}))
}
}
rm(i)
rm(j)
help("filter")
filter(merged_snp_geno_maize_D, merged_snp_geno_maize_D$Chromosome == 1)
merged_snp_geno_maize_D_chr1 <- filter(merged_snp_geno_maize_D, merged_snp_geno_maize_D$Chromosome == 1)
View(merged_snp_geno_maize_D_chr1)
{
for (i in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- filter(i, i$Chromosome == j)
}
}
list_merged_files <- list(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM)
{
for (i in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- filter(i, i$Chromosome == j)
}
}
rm(i)
{
for (i in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- filter(i, i$Chromosome == j)
}
}
View(list_merged_files)
rm(i)
list_merged_files <- list(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM)
{
for (j in 1:10)
{
paste(deparse(substitute(i)), "chr", as.character(j)) <- filter(i, i$Chromosome == j)
}
}
rm(j)
rm(list_merged_files)
sorted_merged_snp_geno_maize_D_chr1 <- arrange(merged_snp_geno_maize_D_chr1, Position)
View(sorted_merged_snp_geno_maize_D_chr1)
write_tsv(sorted_merged_snp_geno_maize_D_chr1, "sorted_merged_snp_geno_maize_D_chr1.txt")
list_merged_files <- list(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM)
chr_list <- list(1,2,3,4,5,6,7,8,9,10)
lapply(list_merged_files, function(x) {x <- lapply(chr_list, function(y) {y <- paste(deparse(substitute(x)),"chr",as.character(y)) <- filter(x, x$Chromosome == y)})})
lapply(list_merged_files, function(x) {x <- lapply(chr_list, function(y) {y  <- filter(x, x$Chromosome == y) %>% paste(deparse(substitute(x)),"chr",as.character(y))})})
lapply(list_merged_files, function(x) {x <- lapply(chr_list, function(y) {y  <- paste(deparse(substitute(x)),"chr",as.character(y))})})
paste(deparse(substitute(list_merged_files)))
lapply(list_merged_files, function(x) {x <- paste(deparse(substitute(x)))})
lapply(list_merged_files, function(x) {paste(deparse(substitute(x)))})
lapply(list_merged_files, function(x) {paste(deparse(substitute(x)))})
lapply(list_merged_files, paste)
View(list_merged_files)
filter_by_chromosome <- function(df, chr){
filter(df, df$Chromosome == chr)
}
make_DFs <- function(df, chr) {
paste(deparse(substitute(df)),"chr",as.character(chr))
}
for (i in 1:10){
lapply(list_merged_files, filter_by_chromosome)
}
lapply(list_merged_files, filter_by_chromosome, i)
make_DFs(merged_snp_geno_maize_D, 1)
paste(deparse(substitute(df)),"chr",as.character(chr), sep = "_")
make_DFs <- function(df, chr) {
paste(deparse(substitute(df)),"chr",as.character(chr), sep = "_")
}
make_DFs(merged_snp_geno_maize_D, 1)
filter_by_chromosome <- function(df, chr){
paste(deparse(substitute(df)),"chr",as.character(chr), sep = "_") <- filter(df, df$Chromosome == chr)
}
filter_by_chromosome(merged_snp_geno_maize_D, 1)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste(deparse(substitute(df)),"chr",as.character(i), sep = "_")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, Position)
write_tsv(sorted_temp_df, file_name)
}
}
rm(make_DFs())
rm(i)
rm(chr_list)
lapply(list_merged_files, filter_by_chromosome)
filter_by_chromosome(merged_snp_geno_maize_D)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste(deparse(substitute(df)),"_chr_", as.character(i),".txt", sep = "")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, Position)
write_tsv(sorted_temp_df, file_name)
}
}
filter_by_chromosome(merged_snp_geno_maize_D)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste("sorted_",deparse(substitute(df)),"_chr_", as.character(i),".txt", sep = "")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, Position)
write_tsv(sorted_temp_df, file_name)
}
}
filter_by_chromosome(merged_snp_geno_maize_D)
View(sorted_merged_snp_geno_maize_D_chr1)
str(sorted_merged_snp_geno_maize_D_chr1)
help("arrange")
str(merged_snp_geno_maize_D)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste("sorted_",deparse(substitute(df)),"_chr_", as.character(i),".txt", sep = "")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, as.numeric(Position))
write_tsv(sorted_temp_df, file_name)
}
}
filter_by_chromosome(merged_snp_geno_maize_D)
str(maize_genotypes)
str(transposed_maize_genotypes)
help("colnames")
help(as.data.frame())
help(as.data.frame
)
help("data.frame")
gc()
fang_et_al_genotypes <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
snp_positions <- read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2019/master/assignments/UNIX_Assignment/snp_position.txt")
dim(fang_et_al_genotypes) #number of rows x number of columns
dim(snp_positions)
nrow(fang_et_al_genotypes) #number of rows
nrow(snp_positions)
ncol(fang_et_al_genotypes) #number of columns
ncol(snp_positions)
str(fang_et_al_genotypes) #type of object, number of observations and variables, name of variables, variable type, data preview
maize_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMMIL" | `Group` == "ZMMLR" | `Group` == "ZMMMR") #isolates maize groups from `fang_et_al_genotypes`
teosinte_genotypes <- filter(fang_et_al_genotypes, `Group` == "ZMPBA" | `Group` == "ZMPIL" | `Group` == "ZMPJA")
str(maize_genotypes)
transposed_maize_genotypes <- as.data.frame(t(as.matrix(maize_genotypes)[,-c(1,2,3)]), stringsAsFactors = FALSE) #transposes all but the first 3 columns
colnames(transposed_maize_genotypes) <- maize_genotypes$Sample_ID #restores column names as Sample_ID from maize genotype data
transposed_maize_genotypes$SNP_ID <- rownames(transposed_maize_genotypes) #adds a variable column with SNP_IDs
rownames(transposed_maize_genotypes) <- NULL #gets rid of SNP_ID rownames
transposed_teosinte_genotypes <- as.data.frame(t(teosinte_genotypes[,-c(1,2,3)]), stringsAsFactors = FALSE) #transposes all but the first 3 columns
colnames(transposed_teosinte_genotypes) <- teosinte_genotypes$Sample_ID #restores column names as Sample_ID from teosinte genotype data
transposed_teosinte_genotypes$SNP_ID <- rownames(transposed_teosinte_genotypes)
rownames(transposed_teosinte_genotypes) <- NULL
View(transposed_maize_genotypes)
reduced_snp_positions <- snp_positions[ ,c("SNP_ID","Chromosome","Position")]
View(reduced_snp_positions)
merged_snp_geno_maize <- merge(reduced_snp_positions, transposed_maize_genotypes) #merges `reduced_snp_positions` and `transposed_maize_genotypes` by their common column `$SNP_ID`
merged_snp_geno_teosinte <- merge(reduced_snp_positions, transposed_teosinte_genotypes) #merges `reduced_snp_positions` and `transposed_teosinte_genotypes` by their common column `$SNP_ID`
View(merged_snp_geno_maize)
merged_snp_geno_maize_QM <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize` to substitute every instance of "?/?" with "?"
merged_snp_geno_maize_D <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize` to substitute every instance of "?/?" with "-"
merged_snp_geno_teosinte_QM <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "?"
merged_snp_geno_teosinte_D <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)})) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "-"
View(merged_snp_geno_maize_D)
merged_snp_geno_maize_QM <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)}), stringsAsFactors = FALSE) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize` to substitute every instance of "?/?" with "?"
merged_snp_geno_maize_D <- data.frame(apply(merged_snp_geno_maize, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)}), stringsAsFactors = FALSE) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_maize` to substitute every instance of "?/?" with "-"
merged_snp_geno_teosinte_QM <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "?", x, fixed = TRUE)}), stringsAsFactors = FALSE) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "?"
merged_snp_geno_teosinte_D <- data.frame(apply(merged_snp_geno_teosinte, c(1, 2), function(x) {x <- gsub("?/?", "-", x, fixed = TRUE)}), stringsAsFactors = FALSE) #creates a dataframe after applying the "gsub" function to every value in the dataframe `merged_snp_geno_teosinte` to substitute every instance of "?/?" with "-"
View(merged_snp_geno_maize_D)
list_merged_files <- list(merged_snp_geno_maize_D, merged_snp_geno_maize_QM, merged_snp_geno_teosinte_D, merged_snp_geno_teosinte_QM)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste("sorted_",deparse(substitute(df)),"_chr_", as.character(i),".txt", sep = "")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, as.numeric(Position))
write_tsv(sorted_temp_df, file_name)
}
}
filter_by_chromosome(merged_snp_geno_maize_D)
lapply(list_merged_files, filter_by_chromosome)
list_merged_files <- list(a=merged_snp_geno_maize_D, b=merged_snp_geno_maize_QM, c=merged_snp_geno_teosinte_D, d=merged_snp_geno_teosinte_QM)
filter_by_chromosome <- function(df)
{
for (i in 1:10)
{
file_name <- paste("sorted_",deparse(substitute(df)),"_chr_", as.character(i),".txt", sep = "")
temp_df <- filter(df, df$Chromosome == i)
sorted_temp_df <- arrange(temp_df, as.numeric(Position))
write_tsv(sorted_temp_df, file_name)
}
}
View(list_merged_files)
lapply(list_merged_files, filter_by_chromosome)
View(list_merged_files)
apply(list_merged_files, filter_by_chromosome)
filter_by_chromosome(merged_snp_geno_maize_D)
filter_by_chromosome(merged_snp_geno_maize_QM)
filter_by_chromosome(merged_snp_geno_maize_QM)
filter_by_chromosome(merged_snp_geno_teosinte_D)
filter_by_chromosome(merged_snp_geno_teosinte_D)
filter_by_chromosome(merged_snp_geno_teosinte_QM)
help("melt_tsv")
View(fang_et_al_genotypes)
View(snp_positions)
fang_genotypes_transposed <- as.data.frame(t(as.matrix(maize_genotypes)), stringsAsFactors = FALSE) #transposes all but the first 3 columns
View(fang_genotypes_transposed)
rm(fang_genotypes_transposed)
ggplot(data = merged_snp_geno_maize) + geom_bar(mapping = aes(x = Chromosome))
View(merged_snp_geno_maize)
ggplot(data = merged_snp_geno_maize) + geom_bar(mapping = aes(x = as.numeric(Chromosome)))
ggplot(data = merged_snp_geno_maize) + geom_bar(mapping = aes(x = as.integer(Chromosome)))
ggplot(data = merged_snp_geno_maize) + geom_bar(mapping = aes(x = Chromosome))
help("aes")
help("ggplot")
help("aes")
ggsave("maize_SNPsperChromosome.pdf")
ggplot(data = merged_snp_geno_teosinte) + geom_bar(mapping = aes(x = Chromosome))
ggsave("teosinte_SNPsperChromosome.pdf")
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position))
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position, y = Chromosome))
ggplot(data = merged_snp_geno_maize) + geom_density(mapping = aes(x = Position)) + facet_wrap(Chromosome)
ggplot(data = merged_snp_geno_maize) + geom_density(mapping = aes(x = Position)) + facet_wrap(~ Chromosome)
ggplot(data = merged_snp_geno_maize) + geom_count(mapping = aes(x = Position)) + facet_wrap(~ Chromosome)
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position)) + facet_wrap(~ Chromosome)
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position, y = Chromosome))
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position, y = Chromosome), size = 1)
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position, y = Chromosome), size = 0.1)
ggplot(data = merged_snp_geno_maize) + geom_point(mapping = aes(x = Position, y = Chromosome), size = 1)
ggsave("maize_SNPdistChromosomes.pdf")
ggplot(data = merged_snp_geno_teosinte) + geom_point(mapping = aes(x = Position, y = Chromosome), size = 1)
ggsave("teosinte_SNPdistChromosomes.pdf")
install.packages("tidyverse","reshape2") #installs the package collection "tidyverse"
install.packages("reshape2")
library(reshape2)
fang_melted <- melt(fang_et_al_genotypes)
View(fang_melted)
View(fang_et_al_genotypes)
snps_melted <- melt(snp_positions)
View(snps_melted)
transposed_fang_genotypes <- as.data.frame(t(as.matrix(fang_et_al_genotypes)[,-c(1,2,3)]), stringsAsFactors = FALSE) #transposes all but the first 3 columns
View(fang_melted)
View(fang_melted)
rm(fang_melted)
#colnames(transposed_fang_genotypes) <- fang_et_al_genotypes$Sample_ID
fang_transposed_melted <- melt(transposed_fang_genotypes)
View(fang_transposed_melted)
